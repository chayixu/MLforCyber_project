# -*- coding: utf-8 -*-
"""call_filter.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1no3Qubju0vzg9lKR7Md2yP-20-TqScBd
"""

import numpy as np
import keras


#This document calls method for final evaluation use.

def checkInputFormat(input):
  if input.shape == (55,47,3):
    #only one image
    return np.reshape(input, (1,55,47,3))
  elif input[0].shape == (55,47,3):
    #a set of images
    return input
  else:
    print("Wrong Input Shape!!!")
    return -1

def filter(input, bad_net_path, repaired_net_path):
  BACKDOOR_LABEL = 1283
  input = checkInputFormat(input)
  model_1 = keras.models.load_model(bad_net_path)
  model_2 = keras.models.load_model(repaired_net_path)

  label_1 = np.argmax(model_1.predict(input), axis=1)
  label_2 = np.argmax(model_2.predict(input), axis=1)
  result = []
  for i in range(len(label_1)):
    if label_1[i] == label_2[i]:
      result.append(label_1[i])
    else:
      result.append(BACKDOOR_LABEL)
  return result